name: Compile and Publish
on:
  push:
    branches:
      - master

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3

      - name: Test
        run: |
          cargo test

  linux-amd64:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: [test]
    steps:
      - uses: actions/checkout@v3

      - name: Build
        run: |
          rustup target add x86_64-unknown-linux-gnu
          cargo build --release --target x86_64-unknown-linux-gnu

      - uses: actions/upload-artifact@v3
        with:
          name: ${{ github.job }}
          path: target/x86_64-unknown-linux-gnu/release/cross-platform-release
          retention-days: 1
      
  macos-amd64:
    runs-on: macos-13
    timeout-minutes: 10
    needs: [test]
    steps:
      - uses: actions/checkout@v3

      - name: Build
        run: |
          rustup target add x86_64-apple-darwin
          cargo build --release --target x86_64-apple-darwin

      - uses: actions/upload-artifact@v3
        with:
          name: ${{ github.job }}
          path: target/x86_64-apple-darwin/release/cross-platform-release
          retention-days: 1

  windows-amd64:
    runs-on: windows-latest
    timeout-minutes: 10
    needs: [test]
    steps:
      - uses: actions/checkout@v3

      - name: Build
        run: |
          rustup target add x86_64-pc-windows-msvc
          cargo build --release --target x86_64-pc-windows-msvc

      - uses: actions/upload-artifact@v3
        with:
          name: ${{ github.job }}
          path: target/x86_64-pc-windows-msvc/release/cross-platform-release.exe
          retention-days: 1

  publish-github-release:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: [linux-amd64, macos-amd64, windows-amd64]
    steps:
      - uses: actions/checkout@v3

      - uses: actions/download-artifact@v3
        with:
          path: target

      - name: Create Github Release
        run: |
          TAG="$(date -u +"v%Y.%m.%d.%H%M").${GITHUB_SHA::4}"

          echo "Tag: ${TAG}"

          gh release create $TAG --draft --notes "Automatically built binaries"

          cd target

          for DIR_NAME in * ; do
              cd $DIR_NAME
              chmod -R +x .
              tar -czvf $DIR_NAME.tar.gz *
              gh release upload $TAG $DIR_NAME.tar.gz
              cd ..
          done

          gh release edit $TAG --draft=false
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
